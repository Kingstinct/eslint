module.exports = {
  extends: [
    'airbnb-base',
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:import/typescript',
    'plugin:json/recommended',
  ],
  ignorePatterns: ['**/*.generated.*', 'node_modules', '.expo', 'build', '**/__generated__/*', 'dist'],
  overrides: [
    {
      extends: ['./jest.js'],
      files: ['**/test/**', '**/tests/**', '**/__tests__/**', 'test/**', '**/*.test.ts', '**/*.test.tsx', '**/*.test.js', '**/*.test.jsx'],
    },
    {
      files: ['babel.config.js', 'metro.config.js', 'jest.config.js'],
      rules: {
        'functional/immutable-data': 0,
      },
    },
  ],
  parserOptions: {
    extraFileExtensions: ['.json'],
    project: './tsconfig.json',
  },
  plugins: ['@typescript-eslint', 'import', 'json', 'functional', 'sort-keys-fix'],
  rules: {
    '@typescript-eslint/consistent-type-exports': 2,
    '@typescript-eslint/consistent-type-imports': 2,
    '@typescript-eslint/explicit-function-return-type': 0,
    '@typescript-eslint/explicit-module-boundary-types': 0,
    '@typescript-eslint/indent': ['error', 2, { VariableDeclarator: { const: 3, let: 2, var: 2 }, ignoredNodes: ['JSXAttribute', 'JSXSpreadAttribute'] }],
    '@typescript-eslint/no-empty-function': [1, { allow: ['arrowFunctions'] }],
    '@typescript-eslint/no-empty-interface': 0,
    '@typescript-eslint/no-implied-eval': 0,
    '@typescript-eslint/no-misused-promises': ['error', { checksVoidReturn: false }],
    '@typescript-eslint/no-shadow': 1,
    '@typescript-eslint/no-unnecessary-type-assertion': 0,
    '@typescript-eslint/no-unsafe-argument': 1,
    '@typescript-eslint/no-unsafe-assignment': 0,
    // would like to have these but they don't work well..
    '@typescript-eslint/no-unsafe-call': 0,
    '@typescript-eslint/no-unsafe-member-access': 0,
    '@typescript-eslint/no-unsafe-return': 0,
    '@typescript-eslint/no-use-before-define': ['error', { classes: true, functions: true, variables: false }],
    '@typescript-eslint/prefer-includes': 2,
    '@typescript-eslint/promise-function-async': [2],
    '@typescript-eslint/restrict-template-expressions': 0,
    '@typescript-eslint/sort-type-union-intersection-members': 2,
    '@typescript-eslint/type-annotation-spacing': [2, { after: true, before: false, overrides: { arrow: { after: true, before: true } } }],
    '@typescript-eslint/unbound-method': ['error', { ignoreStatic: true }],
    'comma-dangle': ['error', 'always-multiline'],
    'functional/immutable-data': ['error', { ignoreAccessorPattern: '**.current' }],
    'functional/prefer-readonly-type': 'error',
    'functional/prefer-tacit': 'error',
    'global-require': 0,
    'import/extensions': [2, { graphql: 'always' }],
    'import/no-cycle': 0,
    'import/no-extraneous-dependencies': ['error', { devDependencies: ['src/**/*.test.ts', 'src/**/*.test.tsx'] }],
    'import/no-named-as-default': 0,
    'import/no-named-as-default-member': 0,
    'import/order': ['error', { 'groups': [['builtin', 'external'], ['parent', 'sibling', 'index'], ['type']], 'newlines-between': 'always' }],
    'import/prefer-default-export': 0,
    'indent': 0,
    'jsx-quotes': ['error', 'prefer-single'],
    'linebreak-style': ['error', 'unix'],
    'max-len': ['warn', { code: 200 }],
    'no-nested-ternary': 0,
    'no-shadow': 0,
    'no-underscore-dangle': ['error', { allow: ['_id', '__typename'] }],
    'no-unreachable': 2,
    'no-use-before-define': 'off',
    'no-void': ['error', { allowAsStatement: true }],
    'one-var': 0,
    'prefer-arrow-callback': ['error', { allowNamedFunctions: true }],
    'quote-props': ['error', 'consistent-as-needed'],
    'quotes': ['error', 'single', { allowTemplateLiterals: true, avoidEscape: true }],
    'semi': ['error', 'never'],
    'sort-keys-fix/sort-keys-fix': 'warn',
  },
}
